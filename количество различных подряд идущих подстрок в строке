//#include "stdafx.h"
//#include <fstream>
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <cmath>
#include <ctime>
#include <map>
#include <set>
#include<random>

#define ll long long

using namespace std;

//ifstream cin("bacon.in");
//ofstream cout("bacon.out");

ll inf[4], k[4], id = 0;

int gcd(int a, int b) {
	while (b) {
		a %= b;
		swap(a, b);
	}
	return a;
}

void gen(int num) {
	srand(time(0));
	for (int i = (int)1e9 + rand() % 32000; true; i++) {
		int t = num + rand() % 1000;
		if (gcd(i, t) == 1) {
			inf[id] = i;
			k[id] = t;
			id++;
			break;
		}
	}
}

int main()
{
	vector<int> nums(4); 
	nums = { 300, 305, 307, 309 };
	for (int i = 0; i < nums.size(); i++) {
		gen(nums[i]);
	}
	ll sm = 0;
	string s;
	cin >> s;
	vector<vector<ll>> pw(4, vector<ll>(s.size() + 1)), h(4, vector <ll> (s.size() + 1));
	for (int num = 0; num < 4; num++) {
		pw[num][0] = 1;
		for (int i = 1; i <= s.size(); i++) {
			pw[num][i] = pw[num][i - 1] * k[num];
			pw[num][i] %= inf[num];
		}
		h[num][0] = 0;
		for (int i = 0; i < s.size(); i++) {
			h[num][i + 1] = h[num][i] * k[num] + s[i];
			h[num][i + 1] %= inf[num];
		}
	}
	
	for (int len = 1; len <= s.size(); len++) {
		set<pair<pair<int, int>, pair<int, int> > > st;
		for (int i = 0; i + len <= s.size(); i++) {
			ll t4 = (h[3][i + len] - h[3][i] * pw[3][len] + inf[3] * inf[3]) % inf[3];
			ll t3 = (h[2][i + len] - h[2][i] * pw[2][len] + inf[2] * inf[2]) % inf[2];
			ll t2 = (h[1][i + len] - h[1][i] * pw[1][len] + inf[1] * inf[1]) % inf[1];
			ll t = (h[0][i + len] - h[0][i] * pw[0][len] + inf[0] * inf[0]) % inf[0];
			st.insert({ { t, t2 },{ t3, t4 } });
		}
		sm += st.size();
	}

	cout << sm;
	return 0;
}

